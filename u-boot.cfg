#define CONFIG_SYS_MMCSD_FS_BOOT_PARTITION 1
#define __DBL_MIN_EXP__ (-1021)
#define CONFIG_OMAP_HSMMC 
#define __HQ_FBIT__ 15
#define CONFIG_CMD_FAT 1
#define IS_MODULE(option) config_enabled(option ##_MODULE)
#define BOOTEFI_NAME "bootarm.efi"
#define __UINT_LEAST16_MAX__ 0xffff
#define __ARM_SIZEOF_WCHAR_T 4
#define __ATOMIC_ACQUIRE 2
#define STATUS_LED_BIT GPIO_PIN(3, 18)
#define __SFRACT_IBIT__ 0
#define __FLT_MIN__ 1.1754943508222875e-38F
#define __GCC_IEC_559_COMPLEX 0
#define CONFIG_BOOTM_NETBSD 1
#define __UFRACT_MAX__ 0XFFFFP-16UR
#define __UINT_LEAST8_TYPE__ unsigned char
#define CONFIG_CMD_FDT 1
#define CONFIG_NAND_OMAP_GPMC 
#define CONFIG_SYS_NAND_U_BOOT_OFFS 0x000c0000
#define __DQ_FBIT__ 63
#define __INTMAX_C(c) c ## LL
#define __ARM_FEATURE_SAT 1
#define __ULFRACT_FBIT__ 32
#define CONFIG_CMD_ITEST 1
#define __SACCUM_EPSILON__ 0x1P-7HK
#define __CHAR_BIT__ 8
#define __USQ_IBIT__ 0
#define __UINT8_MAX__ 0xff
#define CONFIG_BOOTM_VXWORKS 1
#define __ACCUM_FBIT__ 15
#define _CONFIG_CMD_DISTRO_BOOTCMD_H 
#define __WINT_MAX__ 0xffffffffU
#define CONFIG_CMD_EDITENV 1
#define CONFIG_NAND_OMAP_ELM 
#define CONFIG_CMD_MTDPARTS 
#define __USFRACT_FBIT__ 8
#define CONFIG_SPL_NAND_SUPPORT 
#define __ORDER_LITTLE_ENDIAN__ 1234
#define __SIZE_MAX__ 0xffffffffU
#define CONFIG_SYS_MAX_NAND_DEVICE 1
#define __ARM_ARCH_ISA_ARM 1
#define __WCHAR_MAX__ 0xffffffffU
#define __LACCUM_IBIT__ 32
#define ___config_enabled(__ignored,val,...) val
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1
#define __DBL_DENORM_MIN__ ((double)4.9406564584124654e-324L)
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1
#define __GCC_ATOMIC_CHAR_LOCK_FREE 2
#define __GCC_IEC_559 0
#define CONFIG_CMD_PART 
#define __FLT_EVAL_METHOD__ 0
#define __unix__ 1
#define __LLACCUM_MAX__ 0X7FFFFFFFFFFFFFFFP-31LLK
#define CONFIG_HAS_VBAR 1
#define CONFIG_CMD_ENV_EXISTS 1
#define CONFIG_VERSION_VARIABLE 
#define __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2
#define CONFIG_CMD_CRC32 1
#define CONFIG_SYS_LONGHELP 
#define CONFIG_SYS_NAND_5_ADDR_CYCLE 
#define __FRACT_FBIT__ 15
#define BOOTENV_DEV_NAME_DHCP(devtypeu,devtypel,instance) "dhcp "
#define CONFIG_IS_MODULE(option) config_enabled(CONFIG_VAL(option ##_MODULE))
#define CONFIG_SYS_GENERIC_BOARD 1
#define __UINT_FAST64_MAX__ 0xffffffffffffffffULL
#define CONFIG_SYS_LOAD_ADDR 0x82000000
#define __SIG_ATOMIC_TYPE__ int
#define __UACCUM_FBIT__ 16
#define __DBL_MIN_10_EXP__ (-307)
#define __FINITE_MATH_ONLY__ 0
#define CONFIG_CMD_XIMG 1
#define __ARMEL__ 1
#define CONFIG_EXPERT 1
#define CONFIG_CMDLINE 1
#define CONFIG_BOOTDELAY 2
#define __LFRACT_IBIT__ 0
#define CONFIG_SYS_NAND_BASE 0x8000000
#define __GNUC_PATCHLEVEL__ 1
#define __LFRACT_MAX__ 0X7FFFFFFFP-31LR
#define DEFAULT_LINUX_BOOT_ENV "loadaddr=0x82000000\0" "kernel_addr_r=0x82000000\0" "fdtaddr=0x88000000\0" "fdt_addr_r=0x88000000\0" "rdaddr=0x88080000\0" "ramdisk_addr_r=0x88080000\0" "scriptaddr=0x80000000\0" "pxefile_addr_r=0x80100000\0" "bootm_size=0x10000000\0"
#define CONFIG_CMD_BOOTEFI 1
#define __UINT_FAST8_MAX__ 0xff
#define __has_include(STR) __has_include__(STR)
#define CONFIG_OMAP_COMMON 
#define __DEC64_MAX_EXP__ 385
#define BOOTENV_DEV_NAME_BLKDEV(devtypeu,devtypel,instance) #devtypel #instance " "
#define __INT8_C(c) c
#define CONFIG_NR_DRAM_BANKS 1
#define CONFIG_EFI_PARTITION 
#define __UINT_LEAST64_MAX__ 0xffffffffffffffffULL
#define __SA_FBIT__ 15
#define CONFIG_FS_FAT 
#define CONFIG_BOOTM_RTEMS 1
#define CONFIG_SYS_CBSIZE 1024
#define CONFIG_SKIP_LOWLEVEL_INIT 
#define __SHRT_MAX__ 0x7fff
#define __LDBL_MAX__ 1.7976931348623157e+308L
#define __FRACT_MAX__ 0X7FFFP-15R
#define CONFIG_SYS_NAND_ONFI_DETECTION 
#define BOOTENV_SHARED_USB 
#define ____config_val(__ignored,val,...) val
#define __thumb2__ 1
#define CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR 0x300
#define __UFRACT_FBIT__ 16
#define CONFIG_BOOTM_LINUX 1
#define __KERNEL__ 1
#define BOOTENV_DEV_NAME_SCSI BOOT_TARGET_DEVICES_references_SCSI_without_CONFIG_CMD_SCSI
#define CONFIG_BOOTP_SEND_HOSTNAME 
#define __UFRACT_MIN__ 0.0UR
#define __UINT_LEAST8_MAX__ 0xff
#define __GCC_ATOMIC_BOOL_LOCK_FREE 2
#define __UINTMAX_TYPE__ long long unsigned int
#define __LLFRACT_EPSILON__ 0x1P-63LLR
#define CONFIG_CREATE_ARCH_SYMLINK 1
#define CONFIG_CMD_CONSOLE 1
#define CONFIG_SUPPORT_OF_CONTROL 1
#define __linux 1
#define __DEC32_EPSILON__ 1E-6DF
#define __CHAR_UNSIGNED__ 1
#define CONFIG_SYS_CPU "armv7"
#define CONFIG_MII 
#define V_OSCK 24000000
#define __UINT32_MAX__ 0xffffffffU
#define CONFIG_SPL_BOARD_INIT 
#define __ULFRACT_MAX__ 0XFFFFFFFFP-32ULR
#define __TA_IBIT__ 64
#define CONFIG_SPL_STACK_R_ADDR 0x82000000
#define CONFIG_BOOTP_PXE_CLIENTARCH 0x100
#define __LDBL_MAX_EXP__ 1024
#define CONFIG_SPL_YMODEM_SUPPORT 
#define __WINT_MIN__ 0U
#define CONFIG_SYS_THUMB_BUILD 
#define __ARM_ASM_SYNTAX_UNIFIED__ 1
#define __linux__ 1
#define CONFIG_SYS_NAND_ECCSIZE 512
#define CONFIG_SYS_CACHELINE_SIZE 64
#define CONFIG_MMC 
#define __ULLFRACT_MIN__ 0.0ULLR
#define __SCHAR_MAX__ 0x7f
#define CONFIG_SYS_SPL_MALLOC_SIZE CONFIG_SYS_MALLOC_LEN
#define __WCHAR_MIN__ 0U
#define CONFIG_SYS_SPL_ARGS_ADDR (CONFIG_SYS_SDRAM_BASE + (128 << 20))
#define __INT64_C(c) c ## LL
#define __DBL_DIG__ 15
#define __GCC_ATOMIC_POINTER_LOCK_FREE 2
#define __LLACCUM_MIN__ (-0X1P31LLK-0X1P31LLK)
#define CONFIG_CMD_MISC 1
#define __SIZEOF_INT__ 4
#define __SIZEOF_POINTER__ 4
#define __USACCUM_IBIT__ 8
#define CONFIG_SPL_LIBCOMMON_SUPPORT 
#define __USER_LABEL_PREFIX__ 
#define config_enabled(cfg) _config_enabled(cfg)
#define CONFIG_PHY_GIGE 
#define CONFIG_ENV_OFFSET 0x001c0000
#define CONFIG_DM_DEVICE_REMOVE 1
#define __CONFIG_UNCMD_SPL_H__ 
#define __STDC_HOSTED__ 1
#define CONFIG_SYS_NAND_BLOCK_SIZE (128*1024)
#define __LDBL_HAS_INFINITY__ 1
#define CONFIG_ENV_OVERWRITE 
#define CONFIG_CMD_NET 1
#define CONFIG_CMD_NFS 1
#define __LFRACT_MIN__ (-0.5LR-0.5LR)
#define __HA_IBIT__ 8
#define __TQ_IBIT__ 0
#define __FLT_EPSILON__ 1.1920928955078125e-7F
#define CONFIG_ENV_SIZE (128 << 10)
#define __APCS_32__ 1
#define BOOTENV_DEV_HOST BOOT_TARGET_DEVICES_references_HOST_without_CONFIG_SANDBOX
#define V_SCLK (V_OSCK)
#define CONFIG_SUPPORT_RAW_INITRD 
#define CONFIG_NAND_OMAP_GPMC_PREFETCH 
#define __USFRACT_IBIT__ 0
#define __LDBL_MIN__ 2.2250738585072014e-308L
#define CONFIG_CMD_FS_GENERIC 1
#define CONFIG_CMD_PING 1
#define __FRACT_MIN__ (-0.5R-0.5R)
#define __DEC32_MAX__ 9.999999E96DF
#define _CONFIG_DEFAULTS_H_ 
#define __DA_IBIT__ 32
#define BOOTENV_DEV_PXE(devtypeu,devtypel,instance) "bootcmd_pxe=" BOOTENV_RUN_NET_USB_START BOOTENV_RUN_NET_PCI_ENUM "dhcp; " "if pxe get; then " "pxe boot; " "fi\0"
#define BOOTENV_DEV_IDE BOOT_TARGET_DEVICES_references_IDE_without_CONFIG_CMD_IDE
#define __ARM_SIZEOF_MINIMAL_ENUM 4
#define CONFIG_AM33XX 
#define STATUS_LED_STATE STATUS_LED_OFF
#define CONFIG_SYS_MALLOC_LEN (16 << 20)
#define __INT32_MAX__ 0x7fffffff
#define __UQQ_FBIT__ 8
#define __SIZEOF_LONG__ 4
#define __UACCUM_MAX__ 0XFFFFFFFFP-16UK
#define __UINT16_C(c) c
#define CONFIG_INITRD_TAG 
#define CONFIG_SYS_NAND_ECCBYTES 14
#define __U_BOOT_LDS__ 
#define __DECIMAL_DIG__ 17
#define __LFRACT_EPSILON__ 0x1P-31LR
#define BOOTENV_DEV_NAME_PXE(devtypeu,devtypel,instance) "pxe "
#define BOOTENV_DEV_NAME_IDE BOOT_TARGET_DEVICES_references_IDE_without_CONFIG_CMD_IDE
#define __ULFRACT_MIN__ 0.0ULR
#define __gnu_linux__ 1
#define CONFIG_SPL_LIBDISK_SUPPORT 
#define BOOTENV_SHARED_SCSI 
#define __has_include_next(STR) __has_include_next__(STR)
#define _config_enabled(value) __config_enabled(__ARG_PLACEHOLDER_ ##value)
#define CONFIG_LOCALVERSION ""
#define CONFIG_HAVE_GENERIC_BOARD 1
#define CONFIG_SYS_BOOTM_LEN (16 << 20)
#define __LDBL_HAS_QUIET_NAN__ 1
#define CONFIG_SYS_TEXT_BASE 0x80800000
#define __ULACCUM_IBIT__ 32
#define CONFIG_CC_OPTIMIZE_FOR_SIZE 1
#define __UACCUM_EPSILON__ 0x1P-16UK
#define MACH_TYPE_MYD_J335X 4590
#define __GNUC__ 5
#define CONFIG_REGEX 1
#define __ULLACCUM_MAX__ 0XFFFFFFFFFFFFFFFFP-32ULLK
#define CONFIG_SYS_CONFIG_NAME "myd_j335x"
#define __HQ_IBIT__ 0
#define CONFIG_SYS_NAND_OOBSIZE 64
#define __FLT_HAS_DENORM__ 1
#define __SIZEOF_LONG_DOUBLE__ 8
#define CONFIG_HW_WATCHDOG 
#define CONFIG_SPL_FS_LOAD_ARGS_NAME "args"
#define CONFIG_OMAP_WATCHDOG 
#define CONFIG_SPL_AM33XX_ENABLE_RTC32K_OSC 
#define CONFIG_CMD_SAVEENV 1
#define __BIGGEST_ALIGNMENT__ 8
#define CONFIG_SYS_MMCSD_RAW_MODE_ARGS_SECTOR 0x80
#define CONFIG_SYS_BARGSIZE CONFIG_SYS_CBSIZE
#define CONFIG_BOOTM_PLAN9 1
#define CONFIG_CLOCK_SYNTHESIZER 
#define CONFIG_IS_BUILTIN(option) config_enabled(CONFIG_VAL(option))
#define CONFIG_SYS_U_BOOT_MAX_SIZE_SECTORS 0x200
#define DO_DEPS_ONLY 1
#define CONFIG_SPL_TEXT_BASE 0x402F0400
#define __DQ_IBIT__ 0
#define __DBL_MAX__ ((double)1.7976931348623157e+308L)
#define __ULFRACT_IBIT__ 0
#define BOOTENV_SHARED_BLKDEV(devtypel) #devtypel "_boot=" BOOTENV_SHARED_BLKDEV_BODY(devtypel)
#define __INT_FAST32_MAX__ 0x7fffffff
#define __DBL_HAS_INFINITY__ 1
#define BOOTENV_DEV_SATA BOOT_TARGET_DEVICES_references_SATA_without_CONFIG_CMD_SATA
#define CONFIG_SERIAL_PRESENT 1
#define CONFIG_SYS_NAND_PAGE_COUNT (CONFIG_SYS_NAND_BLOCK_SIZE / CONFIG_SYS_NAND_PAGE_SIZE)
#define CONFIG_SYS_CONSOLE_INFO_QUIET 
#define CONFIG_SPL_NAND_DRIVERS 
#define __ACCUM_IBIT__ 16
#define CONFIG_CMD_NAND 
#define __DEC32_MIN_EXP__ (-94)
#define __THUMB_INTERWORK__ 1
#define __LACCUM_MAX__ 0X7FFFFFFFFFFFFFFFP-31LK
#define CONFIG_CMD_GPT 
#define __INT_FAST16_TYPE__ int
#define __STRICT_ANSI__ 1
#define __LDBL_HAS_DENORM__ 1
#define __ARM_FEATURE_LDREX 15
#define CONFIG_SYS_NAND_ECCPOS { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, }
#define CONFIG_SYS_OMAP24_I2C_SPEED 100000
#define CONFIG_AUTOBOOT_DELAY_STR "d"
#define __DEC128_MAX__ 9.999999999999999999999999999999999E6144DL
#define __INT_LEAST32_MAX__ 0x7fffffff
#define __ARM_PCS 1
#define __DEC32_MIN__ 1E-95DF
#define __ACCUM_MAX__ 0X7FFFFFFFP-15K
#define CONFIG_DM_WARN 1
#define __DBL_MAX_EXP__ 1024
#define __USACCUM_EPSILON__ 0x1P-8UHK
#define CONFIG_BOOTP_DNS 
#define CONFIG_CMD_MEMORY 1
#define CONFIG_SYS_MAXARGS 64
#define __DEC128_EPSILON__ 1E-33DL
#define CONFIG_SYS_BOOTCOUNT_ADDR 0x44E3E000
#define __SFRACT_MAX__ 0X7FP-7HR
#define __FRACT_IBIT__ 0
#define __PTRDIFF_MAX__ 0x7fffffff
#define __UACCUM_MIN__ 0.0UK
#define CONFIG_SPL_MTD_SUPPORT 
#define CONFIG_SUPPORT_SPL 1
#define CONFIG_CMD_RUN 1
#define CONFIG_SYS_PBSIZE (CONFIG_SYS_CBSIZE + sizeof(CONFIG_SYS_PROMPT) + 16)
#define CONFIG_ENV_VARS_UBOOT_CONFIG 
#define BOOTENV_DEV_MMC BOOTENV_DEV_BLKDEV
#define __UACCUM_IBIT__ 16
#define __CONFIG_TI_ARMV7_COMMON_H__ 
#define CONFIG_BOOTP_HOSTNAME 
#define CONFIG_BOARDDIR board/myirtech/myd_j335x
#define __LONG_LONG_MAX__ 0x7fffffffffffffffLL
#define __SIZEOF_SIZE_T__ 4
#define __ULACCUM_MAX__ 0XFFFFFFFFFFFFFFFFP-32ULK
#define BOOTENV_DEV_NAME_LEGACY_MMC(devtypeu,devtypel,instance) #devtypel #instance " "
#define __SIZEOF_WINT_T__ 4
#define BOOTENV_DEV_NAME_MMC BOOTENV_DEV_NAME_BLKDEV
#define CONFIG_OMAP3_SPI 
#define CONFIG_NET 1
#define __SA_IBIT__ 16
#define CONFIG_CPU_V7 1
#define __ULLACCUM_MIN__ 0.0ULLK
#define CONFIG_SPL_NAND_AM33XX_BCH 
#define CONFIG_AUTOBOOT_PROMPT "Press SPACE to abort autoboot in %d seconds\n"
#define CONFIG_OF_LIBFDT 1
#define __GXX_ABI_VERSION 1009
#define __UTA_FBIT__ 64
#define __SOFTFP__ 1
#define __FLT_MIN_EXP__ (-125)
#define __USFRACT_MAX__ 0XFFP-8UHR
#define __UFRACT_IBIT__ 0
#define CONFIG_PHYLIB 
#define __ARM_FEATURE_QBIT 1
#define CONFIG_CMDLINE_EDITING 
#define __INT_FAST64_TYPE__ long long int
#define __DBL_MIN__ ((double)2.2250738585072014e-308L)
#define BOOT_TARGET_DEVICES(func) func(MMC, mmc, 0) func(LEGACY_MMC, legacy_mmc, 0) func(MMC, mmc, 1) func(LEGACY_MMC, legacy_mmc, 1) func(NAND, nand, 0) func(PXE, pxe, na) func(DHCP, dhcp, na)
#define CONFIG_DM_SERIAL 1
#define CONFIG_ENV_OFFSET_REDUND 0x001e0000
#define CONFIG_CMD_EXT2 1
#define CONFIG_CMD_EXT4 1
#define config_val(cfg) _config_val(_IS_SPL, cfg)
#define CONFIG_BOOTCOMMAND "run findfdt; " "run init_console; " "run envboot; " "run distro_bootcmd"
#define __CONFIG_MYD_J335X_H 
#define NON_SECURE_SRAM_START 0x402F0400
#define CONFIG_TIMESTAMP 
#define BOOTENV_SET_SCSI_NEED_INIT 
#define CONFIG_SPL_I2C_SUPPORT 
#define CONFIG_MAX_RAM_BANK_SIZE (1024 << 20)
#define STATUS_LED_BOOT 0
#define CONFIG_SPL_NAND_BASE 
#define __LACCUM_MIN__ (-0X1P31LK-0X1P31LK)
#define BOOTENV_RUN_SCSI_INIT 
#define CONFIG_ISO_PARTITION 
#define __ULLACCUM_FBIT__ 32
#define _config_val(x,cfg) __config_val(x, cfg)
#define CPUDIR arch/arm/cpu/armv7
#define __GXX_TYPEINFO_EQUALITY_INLINE 0
#define CONFIG_SYS_MALLOC_CLEAR_ON_INIT 1
#define __ULLFRACT_EPSILON__ 0x1P-64ULLR
#define CONFIG_NET_RETRY_COUNT 10
#define __CONFIG_TI_ARMV7_OMAP_H__ 
#define __DEC128_MIN__ 1E-6143DL
#define CONFIG_SYS_EXTRA_OPTIONS "NAND,ENV_IS_IN_NAND"
#define __REGISTER_PREFIX__ 
#define __UINT16_MAX__ 0xffff
#define __DBL_HAS_DENORM__ 1
#define __ACCUM_MIN__ (-0X1P15K-0X1P15K)
#define __SQ_IBIT__ 0
#define CONFIG_SPL_GPIO_SUPPORT 
#define __UINT8_TYPE__ unsigned char
#define CONFIG_HUSH_PARSER 1
#define CONFIG_CMD_DM 1
#define __UHA_FBIT__ 8
#define __NO_INLINE__ 1
#define CONFIG_BOOTP_VCI_STRING "U-Boot.armv7"
#define CONFIG_DM 1
#define __SFRACT_MIN__ (-0.5HR-0.5HR)
#define BOOTENV_DEV_LEGACY_MMC(devtypeu,devtypel,instance) "bootcmd_" #devtypel #instance "=" "setenv mmcdev " #instance"; " "setenv bootpart " #instance":2 ; " "run mmcboot\0"
#define CONFIG_ZLIB 1
#define __UTQ_FBIT__ 128
#define CONFIG_LIB_UUID 
#define BOOTENV_DEV_NAME_HOST BOOT_TARGET_DEVICES_references_HOST_without_CONFIG_SANDBOX
#define BOOTENV_EFI_SET_FDTFILE_FALLBACK "if test -z \"${fdtfile}\" -a -n \"${soc}\"; then " "setenv efi_fdtfile ${soc}-${board}${boardver}.dtb; " "fi; "
#define __FLT_MANT_DIG__ 24
#define CONFIG_BOOTP_DNS2 
#define __VERSION__ "5.3.1 20160113"
#define CONFIG_SYS_I2C_OMAP24XX 
#define CONFIG_CMD_GO 1
#define __UINT64_C(c) c ## ULL
#define __ULLFRACT_FBIT__ 64
#define CONFIG_CMD_BOOTD 1
#define CONFIG_CMD_BOOTM 1
#define CONFIG_CMD_BOOTZ 1
#define SCAN_DEV_FOR_EFI "run scan_dev_for_efi;"
#define CONFIG_SYS_NS16550 1
#define CONFIG_SYS_MALLOC_F 1
#define __FRACT_EPSILON__ 0x1P-15R
#define __ULACCUM_MIN__ 0.0ULK
#define __UDA_FBIT__ 32
#define BOOTENV_DEV_NAME(devtypeu,devtypel,instance) BOOTENV_DEV_NAME_ ##devtypeu(devtypeu, devtypel, instance)
#define __LLACCUM_EPSILON__ 0x1P-31LLK
#define BOOTENV_DEV_NAND(devtypeu,devtypel,instance) "bootcmd_" #devtypel #instance "=" "run nandboot\0"
#define __GCC_ATOMIC_INT_LOCK_FREE 2
#define CONFIG_AUTO_COMPLETE 
#define CONFIG_BOARD_SPECIFIC_LED 
#define CONFIG_SYS_SOC "am33xx"
#define CONFIG_SYS_HZ 1000
#define CONFIG_SYS_MALLOC_F_LEN 0x400
#define __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __ASSEMBLY__ 1
#define CONFIG_SYS_NS16550_CLK 48000000
#define __USFRACT_MIN__ 0.0UHR
#define CONFIG_DOS_PARTITION 
#define CONFIG_GZIP 1
#define CONFIG_SYS_VENDOR "myirtech"
#define CONFIG_SYS_MMCSD_RAW_MODE_ARGS_SECTORS 0x80
#define __UQQ_IBIT__ 0
#define CONFIG_BOOTSTAGE_USER_COUNT 0x20
#define CONFIG_REQUIRE_SERIAL_CONSOLE 1
#define MTDIDS_DEFAULT "nand0=nand.0"
#define CONFIG_CMD_FPGA 1
#define __INT32_C(c) c
#define __DEC64_EPSILON__ 1E-15DD
#define __ORDER_PDP_ENDIAN__ 3412
#define __DEC128_MIN_EXP__ (-6142)
#define __UHQ_FBIT__ 16
#define __LLACCUM_FBIT__ 31
#define __LINARO_SPIN__ 0
#define __INT_FAST32_TYPE__ int
#define __UINT_LEAST16_TYPE__ short unsigned int
#define CONFIG_SYS_BAUDRATE_TABLE { 9600, 19200, 38400, 57600, 115200 }
#define CONFIG_SYS_NS16550_COM1 0x44e09000
#define CONFIG_SYS_NS16550_COM3 0x48024000
#define __INT16_MAX__ 0x7fff
#define __SIZE_TYPE__ unsigned int
#define __UINT64_MAX__ 0xffffffffffffffffULL
#define __UDQ_FBIT__ 64
#define CONFIG_VAL(option) config_val(option)
#define CONFIG_SPL_LIBGENERIC_SUPPORT 
#define __INT8_TYPE__ signed char
#define CONFIG_DM_STDIO 1
#define CONFIG_LOCALVERSION_AUTO 1
#define BOOTENV_DEV_NAME_SATA BOOT_TARGET_DEVICES_references_SATA_without_CONFIG_CMD_SATA
#define __thumb__ 1
#define __ELF__ 1
#define BOOTENV_DEV_USB BOOT_TARGET_DEVICES_references_USB_without_CONFIG_CMD_USB
#define CONFIG_SYS_HUSH_PARSER 1
#define __ULFRACT_EPSILON__ 0x1P-32ULR
#define __LLFRACT_FBIT__ 63
#define CONFIG_SPL_MMC_SUPPORT 
#define __FLT_RADIX__ 2
#define __INT_LEAST16_TYPE__ short int
#define __ARM_ARCH_PROFILE 65
#define __LDBL_EPSILON__ 2.2204460492503131e-16L
#define __UINTMAX_C(c) c ## ULL
#define __SACCUM_MAX__ 0X7FFFP-7HK
#define CONFIG_SYS_SDRAM_BASE 0x80000000
#define CONFIG_DRIVER_TI_CPSW 
#define CONFIG_IMAGE_FORMAT_LEGACY 
#define CONFIG_SYS_I2C_EEPROM_BUS 0
#define CONFIG_SYS_BOOT_RAMDISK_HIGH 
#define __SIG_ATOMIC_MAX__ 0x7fffffff
#define BOOTENV_DEV_NAME_USB BOOT_TARGET_DEVICES_references_USB_without_CONFIG_CMD_USB
#define BOOTENV BOOTENV_SHARED_HOST BOOTENV_SHARED_MMC BOOTENV_SHARED_PCI BOOTENV_SHARED_USB BOOTENV_SHARED_SATA BOOTENV_SHARED_SCSI BOOTENV_SHARED_IDE BOOTENV_SHARED_UBIFS BOOTENV_SHARED_EFI "boot_prefixes=/ /boot/\0" "boot_scripts=boot.scr.uimg boot.scr\0" "boot_script_dhcp=boot.scr.uimg\0" BOOTENV_BOOT_TARGETS "boot_extlinux=" "sysboot ${devtype} ${devnum}:${distro_bootpart} any " "${scriptaddr} ${prefix}extlinux/extlinux.conf\0" "scan_dev_for_extlinux=" "if test -e ${devtype} " "${devnum}:${distro_bootpart} " "${prefix}extlinux/extlinux.conf; then " "echo Found ${prefix}extlinux/extlinux.conf; " "run boot_extlinux; " "echo SCRIPT FAILED: continuing...; " "fi\0" "boot_a_script=" "load ${devtype} ${devnum}:${distro_bootpart} " "${scriptaddr} ${prefix}${script}; " "source ${scriptaddr}\0" "scan_dev_for_scripts=" "for script in ${boot_scripts}; do " "if test -e ${devtype} " "${devnum}:${distro_bootpart} " "${prefix}${script}; then " "echo Found U-Boot script " "${prefix}${script}; " "run boot_a_script; " "echo SCRIPT FAILED: continuing...; " "fi; " "done\0" "scan_dev_for_boot=" "echo Scanning ${devtype} " "${devnum}:${distro_bootpart}...; " "for prefix in ${boot_prefixes}; do " "run scan_dev_for_extlinux; " "run scan_dev_for_scripts; " "done;" SCAN_DEV_FOR_EFI "\0" "scan_dev_for_boot_part=" "part list ${devtype} ${devnum} -bootable devplist; " "env exists devplist || setenv devplist 1; " "for distro_bootpart in ${devplist}; do " "if fstype ${devtype} " "${devnum}:${distro_bootpart} " "bootfstype; then " "run scan_dev_for_boot; " "fi; " "done\0" BOOT_TARGET_DEVICES(BOOTENV_DEV) "distro_bootcmd=" BOOTENV_SET_SCSI_NEED_INIT "for target in ${boot_targets}; do " "run bootcmd_${target}; " "done\0"
#define CONFIG_PHY_ATHEROS 
#define __LINARO_RELEASE__ 201602
#define BOOTENV_DEV_NAME_UBIFS BOOT_TARGET_DEVICES_references_UBIFS_without_CONFIG_CMD_UBIFS
#define __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2
#define CONFIG_NET_TFTP_VARS 1
#define __VFP_FP__ 1
#define __SIZEOF_PTRDIFF_T__ 4
#define CONFIG_SPL_LDSCRIPT "$(CPUDIR)/am33xx/u-boot-spl.lds"
#define CONFIG_CMD_SPL 
#define BOOTENV_SHARED_HOST 
#define __config_val(x,cfg) ___config_val(__ARG_PLACEHOLDER_ ##x, cfg)
#define CONFIG_PHY_SMSC 
#define CONFIG_CMD_DHCP 1
#define CONFIG_ENV_IS_IN_NAND 1
#define CONFIG_SPL_SERIAL_SUPPORT 
#define __LACCUM_EPSILON__ 0x1P-31LK
#define CONFIG_CMD_ECHO 1
#define __DEC32_SUBNORMAL_MIN__ 0.000001E-95DF
#define CONFIG_GENERIC_MMC 
#define __INT_FAST16_MAX__ 0x7fffffff
#define CONFIG_SYS_SPL_MALLOC_START (CONFIG_SPL_BSS_START_ADDR + CONFIG_SPL_BSS_MAX_SIZE)
#define CONFIG_SYS_NAND_U_BOOT_START CONFIG_SYS_TEXT_BASE
#define _CONFIG_CMD_DISTRO_DEFAULTS_H 
#define __UINT_FAST32_MAX__ 0xffffffffU
#define CONFIG_FAT_WRITE 
#define __UINT_LEAST64_TYPE__ long long unsigned int
#define __USACCUM_MAX__ 0XFFFFP-8UHK
#define __SFRACT_EPSILON__ 0x1P-7HR
#define __FLT_HAS_QUIET_NAN__ 1
#define CONFIG_SYS_TIMERBASE 0x48040000
#define CONFIG_SPL_WATCHDOG_SUPPORT 
#define __FLT_MAX_10_EXP__ 38
#define __LONG_MAX__ 0x7fffffffL
#define __DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL
#define __FLT_HAS_INFINITY__ 1
#define CONFIG_SYS_I2C 
#define __unix 1
#define __USA_FBIT__ 16
#define __UINT_FAST16_TYPE__ unsigned int
#define __DEC64_MAX__ 9.999999999999999E384DD
#define __ARM_32BIT_STATE 1
#define CONFIG_BOOTP_GATEWAY 
#define __CHAR16_TYPE__ short unsigned int
#define __PRAGMA_REDEFINE_EXTNAME 1
#define CONFIG_SPL_BSS_MAX_SIZE 0x80000
#define CONFIG_SPL_FS_LOAD_KERNEL_NAME "uImage"
#define CONFIG_SPL_BSS_START_ADDR 0x80a00000
#define CONFIG_SPL_PAD_TO CONFIG_SPL_MAX_SIZE
#define __INT_LEAST16_MAX__ 0x7fff
#define __DEC64_MANT_DIG__ 16
#define __INT64_MAX__ 0x7fffffffffffffffLL
#define __UINT_LEAST32_MAX__ 0xffffffffU
#define __SACCUM_FBIT__ 7
#define STATUS_LED_PERIOD (CONFIG_SYS_HZ / 2)
#define __GCC_ATOMIC_LONG_LOCK_FREE 2
#define CONFIG_EXTRA_ENV_SETTINGS DEFAULT_LINUX_BOOT_ENV DEFAULT_MMC_TI_ARGS "boot_fdt=try\0" "bootpart=0:2\0" "bootdir=/boot\0" "bootfile=zImage\0" "fdtfile=undefined\0" "console=ttyO0,115200n8\0" "partitions=" "uuid_disk=${uuid_gpt_disk};" "name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}\0" "optargs=\0" "ramroot=/dev/ram0 rw\0" "ramrootfstype=ext2\0" "spiroot=/dev/mtdblock4 rw\0" "spirootfstype=jffs2\0" "spisrcaddr=0xe0000\0" "spiimgsize=0x362000\0" "spibusno=0\0" "spiargs=setenv bootargs console=${console} " "${optargs} " "root=${spiroot} " "rootfstype=${spirootfstype}\0" "ramargs=setenv bootargs console=${console} " "${optargs} " "root=${ramroot} " "rootfstype=${ramrootfstype}\0" "loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz\0" "loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}\0" "loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}\0" "mmcloados=run args_mmc; " "if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " "if run loadfdt; then " "bootz ${loadaddr} - ${fdtaddr}; " "else " "if test ${boot_fdt} = try; then " "bootz; " "else " "echo WARN: Cannot load the DT; " "fi; " "fi; " "else " "bootz; " "fi;\0" "mmcboot=mmc dev ${mmcdev}; " "if mmc rescan; then " "echo SD/MMC found on device ${mmcdev};" "run envboot; " "if run loadimage; then " "run mmcloados;" "fi;" "fi;\0" "spiboot=echo Booting from spi ...; " "run spiargs; " "sf probe ${spibusno}:0; " "sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; " "bootz ${loadaddr}\0" "ramboot=echo Booting from ramdisk ...; " "run ramargs; " "bootz ${loadaddr} ${rdaddr} ${fdtaddr}\0" "findfdt=" "if test $board_name = A335BONE; then " "setenv fdtfile am335x-bone.dtb; fi; " "if test $board_name = A335BNLT; then " "setenv fdtfile am335x-boneblack.dtb; fi; " "if test $board_name = BBG1; then " "setenv fdtfile am335x-bonegreen.dtb; fi; " "if test $board_name = A33515BB; then " "setenv fdtfile am335x-evm.dtb; fi; " "if test $board_name = A335X_SK; then " "setenv fdtfile am335x-evmsk.dtb; fi; " "if test $board_name = A335_ICE; then " "setenv fdtfile am335x-icev2.dtb; fi; " "if test $board_name = myd_j335x; then " "setenv fdtfile myd_j335x.dtb; fi; " "if test $fdtfile = undefined; then " "echo WARNING: Could not determine device tree to use; fi; \0" "init_console=" "if test $board_name = A335_ICE; then " "setenv console ttyO3,115200n8;" "else " "setenv console ttyO0,115200n8;" "fi;\0" NANDARGS NETARGS BOOTENV
#define BOOTENV_SHARED_EFI "boot_efi_binary=" "load ${devtype} ${devnum}:${distro_bootpart} " "${kernel_addr_r} efi/boot/"BOOTEFI_NAME"; " "if fdt addr ${fdt_addr_r}; then " "bootefi ${kernel_addr_r} ${fdt_addr_r};" "else" "bootefi ${kernel_addr_r} ${fdtcontroladdr};" "fi\0" "load_efi_dtb=" "load ${devtype} ${devnum}:${distro_bootpart} " "${fdt_addr_r} ${prefix}${efi_fdtfile}\0" "efi_dtb_prefixes=/ /dtb/ /dtb/current/\0" "scan_dev_for_efi=" "setenv efi_fdtfile ${fdtfile}; " BOOTENV_EFI_SET_FDTFILE_FALLBACK "for prefix in ${efi_dtb_prefixes}; do " "if test -e ${devtype} " "${devnum}:${distro_bootpart} " "${prefix}${efi_fdtfile}; then " "run load_efi_dtb; " "fi;" "done;" "if test -e ${devtype} ${devnum}:${distro_bootpart} " "efi/boot/"BOOTEFI_NAME"; then " "echo Found EFI removable media binary " "efi/boot/"BOOTEFI_NAME"; " "run boot_efi_binary; " "echo EFI LOAD FAILED: continuing...; " "fi; " "setenv efi_fdtfile\0"
#define __INT_LEAST64_TYPE__ long long int
#define BOOTENV_SHARED_PCI 
#define __ARM_FEATURE_CLZ 1
#define __INT16_TYPE__ short int
#define __INT_LEAST8_TYPE__ signed char
#define MTDPARTS_DEFAULT "mtdparts=nand.0:" "128k(NAND.SPL)," "128k(NAND.SPL.backup1)," "128k(NAND.SPL.backup2)," "128k(NAND.SPL.backup3)," "256k(NAND.u-boot-spl-os)," "1m(NAND.u-boot)," "128k(NAND.u-boot-env)," "128k(NAND.u-boot-env.backup1)," "8m(NAND.kernel)," "118m(NAND.rootfs)," "-(NAND.userdata)"
#define CONFIG_BOOTP_PXE 
#define __SQ_FBIT__ 31
#define __DEC32_MAX_EXP__ 97
#define __ARM_ARCH_ISA_THUMB 2
#define __INT_FAST8_MAX__ 0x7f
#define __ARM_ARCH 7
#define __INTPTR_MAX__ 0x7fffffff
#define CONFIG_HAS_THUMB2 1
#define CONFIG_SYS_INIT_SP_ADDR (NON_SECURE_SRAM_END - GENERATED_GBL_DATA_SIZE)
#define LD_AT_LEAST(major,minor) ((major > LD_MAJOR) || (major == LD_MAJOR && minor <= LD_MINOR))
#define __QQ_FBIT__ 7
#define __UTA_IBIT__ 64
#define CONFIG_SYS_ARCH "arm"
#define CONFIG_SYS_ENV_SECT_SIZE CONFIG_SYS_NAND_BLOCK_SIZE
#define CONFIG_NAND_OMAP_ECCSCHEME OMAP_ECC_BCH8_CODE_HW
#define CONFIG_CMD_ASKENV 1
#define CONFIG_BAUDRATE 115200
#define __ARG_PLACEHOLDER_1 0,
#define CONFIG_SYS_I2C_EEPROM_ADDR_LEN 1
#define CONFIG_SYS_BOARD "myd_j335x"
#define CONFIG_PARTITION_UUIDS 
#define __LDBL_MANT_DIG__ 53
#define CONFIG_DM_GPIO 1
#define __SFRACT_FBIT__ 7
#define __SACCUM_MIN__ (-0X1P7HK-0X1P7HK)
#define __DBL_HAS_QUIET_NAN__ 1
#define BOOTENV_SHARED_SATA 
#define CONFIG_SYS_PTV 2
#define CONFIG_SPL_NAND_ECC 
#define CONFIG_CMDLINE_TAG 
#define CONFIG_BOOTSTAGE_STASH_SIZE 0x4096
#define __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)
#define CONFIG_AUTOBOOT_STOP_STR " "
#define BOOTENV_RUN_NET_USB_START 
#define __INTPTR_TYPE__ int
#define __UINT16_TYPE__ short unsigned int
#define __WCHAR_TYPE__ unsigned int
#define __SIZEOF_FLOAT__ 4
#define __THUMBEL__ 1
#define CONFIG_CMD_IMPORTENV 1
#define BOOTENV_BOOT_TARGETS "boot_targets=" BOOT_TARGET_DEVICES(BOOTENV_DEV_NAME) "\0"
#define __USQ_FBIT__ 32
#define _ASM_CONFIG_H_ 
#define __UINTPTR_MAX__ 0xffffffffU
#define __DEC64_MIN_EXP__ (-382)
#define CONFIG_HAVE_PRIVATE_LIBGCC 1
#define __ULLACCUM_IBIT__ 32
#define __INT_FAST64_MAX__ 0x7fffffffffffffffLL
#define __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
#define CONFIG_CMD_EXPORTENV 1
#define __FLT_DIG__ 6
#define CONFIG_PARTITIONS 1
#define __UINT_FAST64_TYPE__ long long unsigned int
#define CONFIG_OMAP_GPIO 
#define CONFIG_SPL_STACK_R 1
#define BOOTENV_DEV_BLKDEV(devtypeu,devtypel,instance) "bootcmd_" #devtypel #instance "=" "setenv devnum " #instance "; " "run " #devtypel "_boot\0"
#define __INT_MAX__ 0x7fffffff
#define CONFIG_CMD_I2C 1
#define __LACCUM_FBIT__ 31
#define IS_BUILTIN(option) config_enabled(option)
#define CONFIG_ARCH_CPU_INIT 
#define CONFIG_GPIO_LED 
#define __USACCUM_MIN__ 0.0UHK
#define BOOTENV_SHARED_IDE 
#define __UHA_IBIT__ 8
#define __INT64_TYPE__ long long int
#define CONFIG_CMD_ELF 1
#define __FLT_MAX_EXP__ 128
#define BOOTENV_DEV_NAME_NAND(devtypeu,devtypel,instance) #devtypel #instance " "
#define _OMAP_H_ 
#define __UTQ_IBIT__ 0
#define CONFIG_SYS_NAND_PAGE_SIZE 2048
#define CONFIG_EFI_LOADER 1
#define __DBL_MANT_DIG__ 53
#define __INT_LEAST64_MAX__ 0x7fffffffffffffffLL
#define __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2
#define __DEC64_MIN__ 1E-383DD
#define BOOTENV_SHARED_BLKDEV_BODY(devtypel) "if " #devtypel " dev ${devnum}; then " "setenv devtype " #devtypel "; " "run scan_dev_for_boot_part; " "fi\0"
#define __WINT_TYPE__ unsigned int
#define __UINT_LEAST32_TYPE__ unsigned int
#define __SIZEOF_SHORT__ 2
#define __ULLFRACT_IBIT__ 0
#define CONFIG_SYS_NO_FLASH 
#define CONFIG_NAND 1
#define __LDBL_MIN_EXP__ (-1021)
#define CONFIG_DM_SEQ_ALIAS 1
#define __arm__ 1
#define __UDA_IBIT__ 32
#define CONFIG_OMAP 
#define __INT_LEAST8_MAX__ 0x7f
#define CONFIG_FS_EXT4 
#define CONFIG_SPL_MAX_SIZE (0x4030B800 - CONFIG_SPL_TEXT_BASE)
#define CONFIG_MACH_TYPE MACH_TYPE_MYD_J335X
#define __LFRACT_FBIT__ 31
#define __ARM_ARCH_7A__ 1
#define CONFIG_SPL_FRAMEWORK 
#define __LDBL_MAX_10_EXP__ 308
#define __ATOMIC_RELAXED 0
#define __DBL_EPSILON__ ((double)2.2204460492503131e-16L)
#define __ARM_FEATURE_SIMD32 1
#define BOOTENV_DEV_DHCP(devtypeu,devtypel,instance) "bootcmd_dhcp=" BOOTENV_RUN_NET_USB_START BOOTENV_RUN_NET_PCI_ENUM "if dhcp ${scriptaddr} ${boot_script_dhcp}; then " "source ${scriptaddr}; " "fi\0"
#define __UINT8_C(c) c
#define CONFIG_BOOTSTAGE_STASH_ADDR 0x0
#define CONFIG_SPI 
#define CONFIG_SPL 1
#define __INT_LEAST32_TYPE__ int
#define CONFIG_STATUS_LED 
#define __SIZEOF_WCHAR_T__ 4
#define __UINT64_TYPE__ long long unsigned int
#define CONFIG_MTD_DEVICE 
#define __LLFRACT_MAX__ 0X7FFFFFFFFFFFFFFFP-63LLR
#define CONFIG_CMD_SOURCE 1
#define DEFAULT_MMC_TI_ARGS "mmcdev=0\0" "mmcrootfstype=ext4 rootwait\0" "finduuid=part uuid mmc ${bootpart} uuid\0" "args_mmc=run finduuid;setenv bootargs console=${console} " "${optargs} " "root=PARTUUID=${uuid} rw " "rootfstype=${mmcrootfstype}\0" "loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr\0" "bootscript=echo Running bootscript from mmc${mmcdev} ...; " "source ${loadaddr}\0" "bootenvfile=uEnv.txt\0" "importbootenv=echo Importing environment from mmc${mmcdev} ...; " "env import -t ${loadaddr} ${filesize}\0" "loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}\0" "envboot=mmc dev ${mmcdev}; " "if mmc rescan; then " "echo SD/MMC found on device ${mmcdev};" "if run loadbootscript; then " "run bootscript;" "else " "if run loadbootenv; then " "echo Loaded env from ${bootenvfile};" "run importbootenv;" "fi;" "if test -n $uenvcmd; then " "echo Running uenvcmd ...;" "run uenvcmd;" "fi;" "fi;" "fi;\0"
#define CONFIG_SYS_PROMPT "MYIR># "
#define __TQ_FBIT__ 127
#define CONFIG_BOOTP_BOOTPATH 
#define CONFIG_CMD_PXE 
#define __INT_FAST8_TYPE__ signed char
#define __ULLACCUM_EPSILON__ 0x1P-32ULLK
#define __UHQ_IBIT__ 0
#define __LLACCUM_IBIT__ 32
#define CONFIG_DISK 1
#define __DBL_DECIMAL_DIG__ 17
#define CONFIG_SETUP_MEMORY_TAGS 
#define __DEC_EVAL_METHOD__ 2
#define __TA_FBIT__ 63
#define BOOTENV_SHARED_UBIFS 
#define CONFIG_EXT4_WRITE 
#define CONFIG_SPL_FAT_SUPPORT 
#define CONFIG_SYS_I2C_EEPROM_ADDR 0x50
#define CONFIG_CMD_LOADB 1
#define BOOTENV_DEV_SCSI BOOT_TARGET_DEVICES_references_SCSI_without_CONFIG_CMD_SCSI
#define CONFIG_CMD_LOADS 1
#define __UDQ_IBIT__ 0
#define __ORDER_BIG_ENDIAN__ 4321
#define CONFIG_CMD_IMI 1
#define __ACCUM_EPSILON__ 0x1P-15K
#define __UINT32_C(c) c ## U
#define __INTMAX_MAX__ 0x7fffffffffffffffLL
#define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __FLT_DENORM_MIN__ 1.4012984643248171e-45F
#define CONFIG_CMD_EXT4_WRITE 1
#define CONFIG_SF_DEFAULT_SPEED 24000000
#define __LLFRACT_IBIT__ 0
#define CONFIG_CONS_INDEX 1
#define __INT8_MAX__ 0x7f
#define CONFIG_POWER_TPS65217 
#define CONFIG_LMB 
#define __UINT_FAST32_TYPE__ unsigned int
#define __CHAR32_TYPE__ unsigned int
#define __FLT_MAX__ 3.4028234663852886e+38F
#define CONFIG_ARM 1
#define CONFIG_SYS_OMAP24_I2C_SLAVE 1
#define __CONFIG_FALLBACKS_H 
#define BOOTENV_DEV(devtypeu,devtypel,instance) BOOTENV_DEV_ ##devtypeu(devtypeu, devtypel, instance)
#define __USACCUM_FBIT__ 8
#define BOOTENV_SHARED_MMC BOOTENV_SHARED_BLKDEV(mmc)
#define NETARGS "static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}" "::off\0" "nfsopts=nolock\0" "rootpath=/export/rootfs\0" "netloadimage=tftp ${loadaddr} ${bootfile}\0" "netloadfdt=tftp ${fdtaddr} ${fdtfile}\0" "netargs=setenv bootargs console=${console} " "${optargs} " "root=/dev/nfs " "nfsroot=${serverip}:${rootpath},${nfsopts} rw " "ip=dhcp\0" "netboot=echo Booting from network ...; " "setenv autoload no; " "run netloadimage; " "run netloadfdt; " "run netargs; " "bootz ${loadaddr} - ${fdtaddr}\0"
#define HAVE_BLOCK_DEVICE 
#define __INT32_TYPE__ int
#define __SIZEOF_DOUBLE__ 8
#define CONFIG_IS_ENABLED(option) (config_enabled(CONFIG_VAL(option)) || config_enabled(CONFIG_VAL(option ##_MODULE)))
#define __FLT_MIN_10_EXP__ (-37)
#define __UFRACT_EPSILON__ 0x1P-16UR
#define CONFIG_AUTOBOOT_KEYED 1
#define __INTMAX_TYPE__ long long int
#define __DEC128_MAX_EXP__ 6145
#define CONFIG_CMD_GPIO 1
#define CONFIG_CMD_BDI 1
#define CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG 
#define __ATOMIC_CONSUME 1
#define __GNUC_MINOR__ 3
#define CONFIG_SYS_MMCSD_RAW_MODE_KERNEL_SECTOR 0x900
#define __UINTMAX_MAX__ 0xffffffffffffffffULL
#define __DEC32_MANT_DIG__ 7
#define __HA_FBIT__ 7
#define __DBL_MAX_10_EXP__ 308
#define __LDBL_DENORM_MIN__ 4.9406564584124654e-324L
#define BOOTENV_RUN_NET_PCI_ENUM 
#define CONFIG_BOOTP_SUBNETMASK 
#define __INT16_C(c) c
#define __ARM__ 1
#define __STDC__ 1
#define CONFIG_LZO 
#define __PTRDIFF_TYPE__ int
#define __LLFRACT_MIN__ (-0.5LLR-0.5LLR)
#define CONFIG_MENU 
#define SRAM_SCRATCH_SPACE_ADDR 0x4030B800
#define __ATOMIC_SEQ_CST 5
#define __DA_FBIT__ 31
#define __UBOOT__ 1
#define CONFIG_CMD_MII 1
#define CONFIG_SPL_EXT_SUPPORT 
#define BOOTENV_DEV_UBIFS BOOT_TARGET_DEVICES_references_UBIFS_without_CONFIG_CMD_UBIFS
#define __UINT32_TYPE__ unsigned int
#define CONFIG_I2C 
#define GPIO_PIN(_bank,_pin) ((_bank << 5) + _pin)
#define __UINTPTR_TYPE__ unsigned int
#define __USA_IBIT__ 16
#define __DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD
#define __CONFIG_TI_AM335X_COMMON_H__ 
#define __ARM_EABI__ 1
#define __DEC128_MANT_DIG__ 34
#define __LDBL_MIN_10_EXP__ (-307)
#define __SIZEOF_LONG_LONG__ 8
#define IS_ENABLED(option) (config_enabled(option) || config_enabled(option ##_MODULE))
#define __ULACCUM_EPSILON__ 0x1P-32ULK
#define __LINUX_KCONFIG_H 
#define CONFIG_CMD_MMC 1
#define CONFIG_SYS_NAND_BAD_BLOCK_POS NAND_LARGE_BADBLOCK_POS
#define CONFIG_SPL_POWER_SUPPORT 
#define CLK_SYNTHESIZER_I2C_ADDR 0x65
#define __config_enabled(arg1_or_junk) ___config_enabled(arg1_or_junk 1, 0)
#define __SACCUM_IBIT__ 8
#define __GCC_ATOMIC_LLONG_LOCK_FREE 2
#define __LDBL_DIG__ 15
#define __FLT_DECIMAL_DIG__ 9
#define __UINT_FAST16_MAX__ 0xffffffffU
#define __GNUC_GNU_INLINE__ 1
#define NON_SECURE_SRAM_END 0x40310000
#define CONFIG_TARGET_MYD_J335X 1
#define NANDARGS "updatesys=nand erase.chip;mmc dev 0; mmc rescan; " "fatload mmc 0 0x82000000 MLO; 				nand write 0x82000000 0 ${filesize};" "fatload mmc 0 0x82000000 myd_j335x.dtb; 	nand write 0x82000000 0x80000 ${filesize};" "fatload mmc 0 0x82000000 u-boot.img; 		nand write 0x82000000 0xc0000 ${filesize};" "fatload mmc 0 0x82000000 zImage; 			nand write 0x82000000 0x200000 ${filesize};" "fatload mmc 0 0x82000000 rootfs.ubi; 		nand write 0x82000000 0xa00000 ${filesize};" "mtdids=" MTDIDS_DEFAULT "\0" "mtdparts=" MTDPARTS_DEFAULT "\0" "nandargs=setenv bootargs console=${console} " "${optargs} " "root=${nandroot} " "rootfstype=${nandrootfstype}\0" "nandroot=ubi0:rootfs rw ubi.mtd=NAND.rootfs,2048\0" "nandrootfstype=ubifs rootwait=1\0" "nandboot=echo Booting from nand ...; " "run nandargs; " "nand read ${fdtaddr} NAND.u-boot-spl-os; " "nand read ${loadaddr} NAND.kernel; " "bootz ${loadaddr} - ${fdtaddr}\0"
#define __GCC_ATOMIC_SHORT_LOCK_FREE 2
#define __ULLFRACT_MAX__ 0XFFFFFFFFFFFFFFFFP-64ULLR
#define __UINT_FAST8_TYPE__ unsigned char
#define ___config_val(arg1_or_junk,cfg) ____config_val(arg1_or_junk CONFIG_SPL_ ##cfg, CONFIG_ ##cfg)
#define __USFRACT_EPSILON__ 0x1P-8UHR
#define __ULACCUM_FBIT__ 32
#define __ARM_FEATURE_DSP 1
#define __QQ_IBIT__ 0
#define __ATOMIC_ACQ_REL 4
#define __ATOMIC_RELEASE 3
#define CONFIG_SPL_SERIAL_PRESENT 1
#define CONFIG_SPL_FS_LOAD_PAYLOAD_NAME "u-boot.img"
